# Reference: (N/A)

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: keystone-pdb
spec:
  selector:
    matchLabels:
      app: keystone
  minAvailable: 1
  #maxUnavailable: 2

---

apiVersion: v1
kind: Service
metadata:
  name: keystone
  labels:
    app: keystone
spec:
  ports:
  - name: keystone-5000
    port: 5000
    targetPort: 5000
  - name: keystone-35357
    port: 35357
    targetPort: 35357
  #sessionAffinity: ClientIP
  clusterIP: None
  #type: NodePort # Or LoadBalancer in production w/ proper security
  #type: LoadBalancer
  selector:
    app: keystone

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: keystone
  labels:
    app: keystone
spec:
  serviceName: "keystone"
  replicas: 1
  podManagementPolicy: OrderedReady
  #podManagementPolicy: Parallel
  selector:
    matchLabels:
      app: keystone
  template:
    metadata:
      labels:
        app: keystone
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
         podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
               - key: "app"
                 operator: In
                 values:
                 - keystone
             topologyKey: "kubernetes.io/hostname"
      nodeSelector:
        controller: "true"
      initContainers:
      - name: wait1
        #imagePullPolicy: Always
        imagePullPolicy: IfNotPresent
        image: call518/oaas-init-container:1.0
        envFrom:
          - configMapRef:
              name: env-common
        volumeMounts:
        - name: init-container-scripts
          mountPath: /init-container-scripts
        command: ["/bin/bash","-c","/init-container-scripts/init-check-haproxy.sh"]
      - name: wait2
        #imagePullPolicy: Always
        imagePullPolicy: IfNotPresent
        image: call518/oaas-init-container:1.0
        envFrom:
          - configMapRef:
              name: env-common
        volumeMounts:
        - name: init-container-scripts
          mountPath: /init-container-scripts
        command: ["/bin/bash","-c","/init-container-scripts/init-check-memcached.sh"]
      - name: wait3
        #imagePullPolicy: Always
        imagePullPolicy: IfNotPresent
        image: call518/oaas-init-container:1.0
        envFrom:
          - configMapRef:
              name: env-common
        volumeMounts:
        - name: init-container-scripts
          mountPath: /init-container-scripts
        command: ["/bin/bash","-c","/init-container-scripts/init-check-rabbitmq.sh"]
      hostAliases:
      - ip: "127.0.0.1"
        hostnames:
        - "keystone"
      containers:
        - name: keystone
          image: call518/oaas-pike:latest
          #imagePullPolicy: Always
          imagePullPolicy: IfNotPresent
          envFrom:
            - configMapRef:
                name: env-common
          command: ["/scripts/keystone-init.sh"]
          ports:
            - containerPort: 5000
          ports:
            - containerPort: 35357
          volumeMounts:
          - name: openstack-openrc
            mountPath: /root/openrc
          - name: keystone-setup
            mountPath: /scripts
          - name: keystone-fernet-keys
            readOnly: true
            mountPath: /keystone-fernet-keys
          readinessProbe:
            exec:
              command:
              - /check-init.sh
            initialDelaySeconds: 10
            periodSeconds: 5
            #timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 1
          #livenessProbe:
          #  exec:
          #    command:
          #    - /healthcheck.sh
          #    - --liveness
          ##livenessProbe:
          ##  tcpSocket:
          ##    port: 35357
          ##  initialDelaySeconds: 5
          ##  periodSeconds: 10
      volumes:
      - name: init-container-scripts
        configMap:
          name: init-container-scripts
          defaultMode: 0755
      - name: openstack-openrc
        configMap:
          name: openstack-openrc
          defaultMode: 0755
      - name: keystone-setup
        configMap:
          name: keystone-setup
          defaultMode: 0755
      - name: keystone-fernet-keys
        secret:
          secretName: keystone-fernet-keys
