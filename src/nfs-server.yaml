apiVersion: v1
kind: Service
metadata:
  name: nfs-server
  labels:
    app: nfs-server
spec:
  ports:
  - port: 111
    protocol: TCP
  - port: 111
    protocol: UDP
  - port: 2049
    protocol: TCP
  - port: 2049
    protocol: UDP
  #sessionAffinity: ClientIP
  #clusterIP: None
  #type: NodePort # Or LoadBalancer in production w/ proper security
  #type: LoadBalancer
  selector:
    app: nfs-server

---

apiVersion: v1
kind: Pod
metadata:
  name: nfs-server
spec:
  nodeSelector:
    nfs-server: "true"
  restartPolicy: Always
  containers:
  - name: nfs-server
    image: call518/oaas-nfs-server
    securityContext:
      privileged: true
    ports:
    - containerPort: 111
      protocol: TCP
    - containerPort: 111
      protocol: UDP
    - containerPort: 2049
      protocol: TCP
    - containerPort: 2049
      protocol: UDP
    volumeMounts:
    - name: pvc-nfs-server
      mountPath: /data
    env:
    - name: SHARED_DIRECTORY
      value: /data
    - name: FSID
      value: "true"
    command:
      - "bash"
      - "-c"
      - |
        rm -rf /data/*
        mkdir -p /data/pv/galera-{0,1,2}
        mkdir -p /data/pv/mongodb-{0,1,2}
        mkdir -p /data/pv/rabbitmq-{0,1,2}
        mkdir -p /data/pv/glance-images
        mkdir -p /data/pv/zookeeper-{0,1,2}
        mkdir -p /data/pv/cinder-volumes
        mkdir -p /data/pv/cinder-backups
        /usr/bin/nfsd.sh;
  volumes:
  - name: pvc-nfs-server
    persistentVolumeClaim:
      claimName: pvc-nfs-server
