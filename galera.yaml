apiVersion: v1
kind: Service
metadata:
  name: galera
  labels:
    app: galera
spec:
  ports:
  - port: 3306
    name: mysql
  #sessionAffinity: ClientIP
  #clusterIP: None
  type: NodePort # Or LoadBalancer in production w/ proper security
  #type: LoadBalancer
  selector:
    app: galera

---

apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: galera
spec:
  serviceName: galera
  replicas: 3
  template:
    metadata:
      labels:
        app: galera
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
         podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
               - key: "app"
                 operator: In
                 values:
                 - galera
             topologyKey: "kubernetes.io/hostname"
      containers:
      - name: galera
        image: severalnines/mariadb:10.1
        ports:
        - name: mysql
          containerPort: 3306
        env:
        # kubectl create secret generic mysql-pass --from-file=password.txt
        - name: MYSQL_ROOT_PASSWORD
          value: myrootpassword
        - name: DISCOVERY_SERVICE
          value: etcd-client:2379
        - name: XTRABACKUP_PASSWORD
          value: password
        - name: CLUSTER_NAME
          value: mariadb_galera_ss
        - name: MYSQL_DATABASE
          value: mydatabase
        - name: MYSQL_USER
          value: myuser
        - name: MYSQL_PASSWORD
          value: myuserpassword
        readinessProbe:
          exec:
            command:
            - /healthcheck.sh
            - --readiness
          initialDelaySeconds: 120
          periodSeconds: 1
        livenessProbe:
          exec:
            command:
            - /healthcheck.sh
            - --liveness
          initialDelaySeconds: 120
          periodSeconds: 1
        volumeMounts:
        - name: pvc-galera-datadir
          mountPath: /var/lib/mysql
  volumeClaimTemplates:
  - metadata:
      name: pvc-galera-datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      # uncomment if using slow storageClass on AWS
      # then no need for running pv or pvc manifests
      #storageClassName: slow
      resources:
        requests:
          storage: 10Gi
