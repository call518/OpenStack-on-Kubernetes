apiVersion: v1
kind: ConfigMap
metadata:
  name: keystone-setup
data:
  keystone-init.sh: |
    #!/bin/bash
    set -e
    service rsyslog restart
    a2dissite 000-default
    echo "ServerName localhost" >> /etc/apache2/apache2.conf
    mysql -h$HAPROXY_GALERA_SERVICE_HOST -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS keystone"
    mysql -h$HAPROXY_GALERA_SERVICE_HOST -uroot -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '$K8S_KEYSTONE_DB_PASS'"
    mysql -h$HAPROXY_GALERA_SERVICE_HOST -uroot -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '$K8S_KEYSTONE_DB_PASS'"
    cp -a /etc/keystone/keystone.conf /etc/keystone/keystone.conf.default
    #sed -i "/^\[database\]/a connection = mysql+pymysql://keystone:$K8S_KEYSTONE_DB_PASS@$HAPROXY_GALERA_SERVICE_HOST/keystone" /etc/keystone/keystone.conf
    #sed -i "/^\[token\]/a provider = fernet" /etc/keystone/keystone.conf
    cat /scripts/keystone.conf > /etc/keystone/keystone.conf
    sed -i "s/___K8S_KEYSTONE_DB_PASS___/$K8S_KEYSTONE_DB_PASS/g" /etc/keystone/keystone.conf
    sed -i "s/___HAPROXY_GALERA_SERVICE_HOST___/$HAPROXY_GALERA_SERVICE_HOST/g" /etc/keystone/keystone.conf
    sed -i "s/___K8S_RABBITMQ_OPENSTACK_USER___/$K8S_RABBITMQ_OPENSTACK_USER/g" /etc/keystone/keystone.conf
    sed -i "s/___K8S_RABBITMQ_OPENSTACK_PASS___/$K8S_RABBITMQ_OPENSTACK_PASS/g" /etc/keystone/keystone.conf
    service apache2 restart
    cat > /root/admin-openrc << EOF
    export OS_PROJECT_DOMAIN_NAME=default
    export OS_USER_DOMAIN_NAME=default
    export OS_PROJECT_NAME=admin
    export OS_USERNAME=admin
    export OS_PASSWORD=$K8S_KEYSTONE_ADMIN_PASS
    export OS_AUTH_URL=http://keystone:35357/v3
    export OS_IDENTITY_API_VERSION=3
    export OS_IMAGE_API_VERSION=2
    EOF
    cat > /root/demo-openrc << EOF
    export OS_PROJECT_DOMAIN_NAME=Default
    export OS_USER_DOMAIN_NAME=Default
    export OS_PROJECT_NAME=demo
    export OS_USERNAME=demo
    export OS_PASSWORD=$K8S_KEYSTONE_DEMO_PASS
    export OS_AUTH_URL=http://keystone:5000/v3
    export OS_IDENTITY_API_VERSION=3
    export OS_IMAGE_API_VERSION=2
    EOF
    if [ "$HOSTNAME" == "keystone-0" ]; then
      su -s /bin/sh -c "keystone-manage db_sync" keystone
      keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone
      keystone-manage credential_setup --keystone-user keystone --keystone-group keystone
      keystone-manage bootstrap --bootstrap-password $K8S_KEYSTONE_ADMIN_PASS \
        --bootstrap-admin-url http://keystone:35357/v3/ \
        --bootstrap-internal-url http://keystone:35357/v3/ \
        --bootstrap-public-url http://keystone:5000/v3/ \
        --bootstrap-region-id RegionOne
      source /root/admin-openrc
      #openstack domain create --description "Default Domain" default
      openstack project create --domain default --description "Service Project" service
      openstack project create --domain default --description "Demo Project" demo
      openstack user create --domain default --password $K8S_KEYSTONE_DEMO_PASS demo
      openstack role create user
      openstack role add --project demo --user demo user
    fi
    tail -F /var/log/syslog /var/log/apache2/*

  keystone.conf: |
    [DEFAULT]
    [assignment]
    [auth]
    [cache]
    [catalog]
    #driver = keystone.catalog.backends.sql.Catalog
    [cors]
    [cors.subdomain]
    [credential]
    [database]
    connection = mysql+pymysql://keystone:___K8S_KEYSTONE_DB_PASS___@___HAPROXY_GALERA_SERVICE_HOST___/keystone
    [domain_config]
    [endpoint_filter]
    [endpoint_policy]
    [eventlet_server]
    [federation]
    [fernet_tokens]
    [identity]
    #driver = keystone.identity.backends.sql.Identity
    [identity_mapping]
    [kvs]
    [ldap]
    [matchmaker_redis]
    [memcache]
    servers = memcached:11211
    [oauth1]
    [os_inherit]
    [oslo_messaging_amqp]
    [oslo_messaging_notifications]
    driver = messagingv2
    transport_url = rabbit://___K8S_RABBITMQ_OPENSTACK_USER___:___K8S_RABBITMQ_OPENSTACK_PASS___@rabbitmq
    [oslo_messaging_rabbit]
    [oslo_messaging_zmq]
    [oslo_middleware]
    [oslo_policy]
    [paste_deploy]
    [policy]
    [profiler]
    [resource]
    [revoke]
    [role]
    [saml]
    [security_compliance]
    [shadow_users]
    [signing]
    [token]
    provider = fernet
    [tokenless_auth]
    [trust]

#  keystone-wsgi.conf: |
#    Listen 5000
#    Listen 35357
#
#    <VirtualHost *:5000>
#        WSGIDaemonProcess keystone-public processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
#        WSGIProcessGroup keystone-public
#        WSGIScriptAlias / /usr/bin/keystone-wsgi-public
#        WSGIApplicationGroup %{GLOBAL}
#        WSGIPassAuthorization On
#        ErrorLogFormat "%{cu}t %M"
#        ErrorLog /var/log/apache2/keystone.log
#        CustomLog /var/log/apache2/keystone_access.log combined
#
#        <Directory /usr/bin>
#            Require all granted
#        </Directory>
#    </VirtualHost>
#
#    <VirtualHost *:35357>
#        WSGIDaemonProcess keystone-admin processes=5 threads=1 user=keystone group=keystone display-name=%{GROUP}
#        WSGIProcessGroup keystone-admin
#        WSGIScriptAlias / /usr/bin/keystone-wsgi-admin
#        WSGIApplicationGroup %{GLOBAL}
#        WSGIPassAuthorization On
#        ErrorLogFormat "%{cu}t %M"
#        ErrorLog /var/log/apache2/keystone.log
#        CustomLog /var/log/apache2/keystone_access.log combined
#
#        <Directory /usr/bin>
#            Require all granted
#        </Directory>
#    </VirtualHost>
