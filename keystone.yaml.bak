# Reference: https://blog.bluematador.com/posts/running-haproxy-docker-containers-kubernetes/

apiVersion: v1
kind: Service
metadata:
  name: keystone-5000
  labels:
    app: keystone-5000
spec:
  ports:
  - port: 5000
    targetPort: 5000
  #sessionAffinity: ClientIP
  #clusterIP: None
  #type: NodePort # Or LoadBalancer in production w/ proper security
  type: LoadBalancer
  selector:
    app: keystone

---

apiVersion: v1
kind: Service
metadata:
  name: keystone-35357
  labels:
    app: keystone-35357
spec:
  ports:
  - port: 35357
    targetPort: 35357
  #sessionAffinity: ClientIP
  #clusterIP: None
  #type: NodePort # Or LoadBalancer in production w/ proper security
  type: LoadBalancer
  selector:
    app: keystone

---

apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: keystone
spec:
  replicas: 3
  selector:
    matchLabels:
      app: keystone
  template:
    metadata:
      labels:
        app: keystone
    spec:
      terminationGracePeriodSeconds: 10
      affinity:
         podAntiAffinity:
           requiredDuringSchedulingIgnoredDuringExecution:
           - labelSelector:
               matchExpressions:
               - key: "app"
                 operator: In
                 values:
                 - keystone
             topologyKey: "kubernetes.io/hostname"
      containers:
        - name: keystone
          image: call518/oaas-keystone
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: env-config
          command:
            - "bash"
            - "-c"
            - |
              service rsyslog start \
              && echo $MYSQL_ROOT_PASSWORD $KEYSTONE_DB_PASS $KEYSTONE_ADMIN_PASS $KEYSTONE_DEMO_PASS \
              && mysql -hhaproxy -uroot -p$MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS keystone" \
              && mysql -hhaproxy -uroot -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'localhost' IDENTIFIED BY '$KEYSTONE_DB_PASS'" \
              && mysql -hhaproxy -uroot -p$MYSQL_ROOT_PASSWORD -e "GRANT ALL PRIVILEGES ON keystone.* TO 'keystone'@'%' IDENTIFIED BY '$KEYSTONE_DB_PASS'" \
              && sed -i "/^\[database\]/a connection = mysql+pymysql://keystone:$KEYSTONE_DB_PASS@haproxy/keystone" /etc/keystone/keystone.conf \
              && sed -i "/^\[token\]/a provider = fernet" /etc/keystone/keystone.conf \
              && su -s /bin/sh -c "keystone-manage db_sync" keystone \
              && keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone \
              && keystone-manage credential_setup --keystone-user keystone --keystone-group keystone \
              && keystone-manage bootstrap --bootstrap-password $KEYSTONE_ADMIN_PASS \
                --bootstrap-admin-url http://controller:35357/v3/ \
                --bootstrap-internal-url http://controller:35357/v3/ \
                --bootstrap-public-url http://controller:5000/v3/ \
                --bootstrap-region-id RegionOne \
              && echo "ServerName localhost" >> /etc/apache2/apache2.conf \
              && service apache2 restart \
              && cat > /root/admin-openrc << EOF
              export OS_PROJECT_DOMAIN_NAME=default
              export OS_USER_DOMAIN_NAME=default
              export OS_PROJECT_NAME=admin
              export OS_USERNAME=admin
              export OS_PASSWORD=$KEYSTONE_ADMIN_PASS
              export OS_AUTH_URL=http://controller:35357/v3
              export OS_IDENTITY_API_VERSION=3
              export OS_IMAGE_API_VERSION=2
              EOF \
              && cat > /root/demo-openrc << EOF
              export OS_PROJECT_DOMAIN_NAME=Default
              export OS_USER_DOMAIN_NAME=Default
              export OS_PROJECT_NAME=demo
              export OS_USERNAME=demo
              export OS_PASSWORD=$KEYSTONE_DEMO_PASS
              export OS_AUTH_URL=http://controller:5000/v3
              export OS_IDENTITY_API_VERSION=3
              export OS_IMAGE_API_VERSION=2
              EOF \
              && source /root/admin-openrc \
              && openstack project create --domain default --description "Service Project" service \
              && openstack project create --domain default --description "Demo Project" demo \
              && openstack user create --domain default --password $KEYSTONE_DEMO_PASS demo \
              && openstack role create user \
              && openstack role add --project demo --user demo user \
              && tail -F /var/log/syslog /var/log/apache2/*
          ports:
            - containerPort: 5000
          ports:
            - containerPort: 35357
#          livenessProbe:
#            tcpSocket:
#              port: 5000
#            initialDelaySeconds: 5
#            periodSeconds: 10
